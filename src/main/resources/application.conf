akka {
  loglevel = "DEBUG"
  log-dead-letters = 3
  log-dead-letters-during-shutdown = off

  actor.deployment {

    /operator/processor {
      router = balancing-pool
      nr-of-instances = ${global.numofworkers}
    }
    /operator/info {
      router = round-robin-pool
      nr-of-instances = ${global.numofworkers}
    }


    /main/operator/processor {
      router = round-robin-pool
      nr-of-instances = ${global.numofworkers}
    }
    /main/operator/info {
      router = round-robin-pool
      nr-of-instances = ${global.numofworkers}
    }
    /main/pg {
      router = round-robin-pool
      nr-of-instances = ${global.numofworkers}
    }
  }
}
# Connection Pool settings
db.default.poolInitialSize=${global.numofworkers}
db.default.poolMaxSize=${global.numofworkers_squared}
db.default.connectionTimeoutMillis=1000
db.default.poolFactoryName="commons-dbcp2"
# Connection Pool settings
db.pg.poolInitialSize=1
db.pg.poolMaxSize=${global.numofworkers}
db.pg.connectionTimeoutMillis=1000
db.pg.poolFactoryName="commons-dbcp2"
# Global settings
scalikejdbc.global.loggingSQLAndTime.enabled=false
scalikejdbc.global.loggingSQLAndTime.logLevel=INFO
scalikejdbc.global.loggingSQLAndTime.warningEnabled=false
scalikejdbc.global.loggingSQLAndTime.warningThresholdMillis=1000
scalikejdbc.global.loggingSQLAndTime.warningLogLevel=warn
scalikejdbc.global.loggingSQLAndTime.singleLineMode=false
scalikejdbc.global.loggingSQLAndTime.printUnprocessedStackTrace=false
scalikejdbc.global.loggingSQLAndTime.stackTraceDepth=15
